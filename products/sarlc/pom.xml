<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.sarl</groupId>
		<artifactId>io.sarl.products</artifactId>
		<version>0.13.0-SNAPSHOT</version>
	</parent>

	<artifactId>io.sarl.lang.sarlc</artifactId>
	<packaging>jar</packaging>
	<name>CLI Compiler</name>

	<properties>
		<cliCompilerName>sarlc</cliCompilerName>
		<cliCompilerMainClass>io.sarl.lang.sarlc.Main</cliCompilerMainClass>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.sarl.maven</groupId>
			<artifactId>io.sarl.maven.bootiquebatchcompiler</artifactId>
		</dependency>
		<dependency>
			<groupId>me.tongfei</groupId>
			<artifactId>progressbar</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sarl.maven</groupId>
			<artifactId>io.sarl.maven.sdk</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.sarl</groupId>
			<artifactId>io.sarl.tests.api</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>${project.artifactId}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<executions>
					<execution>
						<id>prepare-constants-class</id>
						<phase>process-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<encoding>${project.build.sourceEncoding}</encoding>
							<file>${project.basedir}/src/main/java/io/sarl/lang/sarlc/Constants.java</file>
							<regexFlags><regexFlag>MULTILINE</regexFlag></regexFlags>
							<replacements>
								<replacement>
									<token>(PROGRAM_NAME *= *")([^"]+)(";)</token>
									<value>$1${cliCompilerName}$3</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<sourceDirectories>
						<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
					</sourceDirectories>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>cli-application</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>with-dependencies.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>${cliCompilerMainClass}</mainClass>
								</manifest>
								<manifestEntries>
									<Automatic-Module-Name>${project.artifactId}</Automatic-Module-Name>
								</manifestEntries>
							</archive>
							<attach>false</attach>
						</configuration>
					</execution>
					<execution>
						<id>cli-embedded-sdk</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>embedded</finalName>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<descriptors>
								<descriptor>sdk-libs.xml</descriptor>
							</descriptors>
							<attach>false</attach>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-sarlc-win</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<headerType>console</headerType>
							<outfile>${project.build.directory}/${cliCompilerName}.exe</outfile>
							<jar>${project.build.directory}/${project.build.finalName}-cli.jar</jar>
							<icon>${project.basedir}/icons/sarlc.ico</icon>
							<classPath>
								<mainClass>${cliCompilerMainClass}</mainClass>
								<addDependencies>false</addDependencies>
							</classPath>
							<jre>
								<minVersion>${sarl-run.min.jdk.version}.0</minVersion>
								<jdkPreference>jdkOnly</jdkPreference>
								<runtimeBits>64</runtimeBits>
							</jre>
							<versionInfo>
								<fileVersion>${sarl.release_version}.0</fileVersion>
								<txtFileVersion>${project.version}</txtFileVersion>
								<fileDescription>${cliCompilerName}</fileDescription>
								<copyright>${copyrighters}</copyright>
								<productVersion>${sarl.release_version}.0</productVersion>
								<txtProductVersion>${project.version}</txtProductVersion>
								<productName>${cliCompilerName}</productName>
								<internalName>${cliCompilerName}</internalName>
								<originalFilename>${cliCompilerName}.exe</originalFilename>
							</versionInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-sarlc-linux</id>
						<phase>package</phase>
						<configuration>
							<target>
								<property name="sarlc.linux.input"
									value="${project.basedir}/src-templates/${cliCompilerName}.sh" />
								<property name="sarlc.linux.output"
									value="${project.build.directory}/${cliCompilerName}.tmp" />
								<property name="sarlc.linux.output.full"
									value="${project.build.directory}/${cliCompilerName}" />
								<copy overwrite="true" file="${sarlc.linux.input}"
									tofile="${sarlc.linux.output}" />
								<replace file="${sarlc.linux.output}"
									token="{cliCompilerMainClass}" value="${cliCompilerMainClass}" />
								<replace file="${sarlc.linux.output}"
									token="{project.build.finalName}"
									value="${project.build.finalName}" />
								<concat dest="${sarlc.linux.output.full}" binary="yes">
									<fileset file="${sarlc.linux.output}" />
									<fileset
										file="${project.build.directory}/${project.build.finalName}-cli.jar" />
								</concat>
								<chmod perm="ugo+x">
									<fileset file="${sarlc.linux.output.full}" />
								</chmod>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>sh.tak.appbundler</groupId>
				<artifactId>appbundle-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-sarlc-osx</id>
						<goals>
							<goal>bundle</goal>
						</goals>
						<configuration>
							<mainClass>${cliCompilerMainClass}</mainClass>
							<iconFile>/icons/sarlc.icns</iconFile>
							<generateDiskImageFile>true</generateDiskImageFile>
							<diskImageInternetEnable>true</diskImageInternetEnable>
							<includeApplicationsSymlink>true</includeApplicationsSymlink>
							<jvmVersion>${sarl-run.min.jdk.version}+</jvmVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>net.jsign</groupId>
				<artifactId>jsign-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>sarlc-exe-sign</id>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/${cliCompilerName}.exe</file>
							<name>SARL Command-Line Compiler</name>
							<url>${sarlUrl}</url>
							<keystore>../../build-tools/keyring/app.p12</keystore>
							<storetype>PKCS12</storetype>
							<alias>sarl-developpers</alias>
							<storepass>sarl-developpers</storepass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>remove-default-project-artifact</id>
						<phase>verify</phase>
						<goals>
							<goal>remove-project-artifact</goal>
						</goals>
						<configuration>
							<removeAll>true</removeAll>
						</configuration>
					</execution>
					<execution>
						<id>add-native-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${cliCompilerName}.exe</file>
									<type>exe</type>
									<classifier></classifier>
								</artifact>
								<artifact>
									<file>${project.build.directory}/${cliCompilerName}</file>
									<type>sh</type>
									<classifier></classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
